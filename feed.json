{
    "version": "https://jsonfeed.org/version/1",
    "title": "Win7GM's Blog",
    "subtitle": "今度は頑張る",
    "icon": "https://blog.msforever.xyz/images/favicon.ico",
    "description": "Anything.",
    "home_page_url": "https://blog.msforever.xyz",
    "items": [
        {
            "id": "https://blog.msforever.xyz/instructions-on-the-blog/",
            "url": "https://blog.msforever.xyz/instructions-on-the-blog/",
            "title": "基于Hexo的博客的安装和配置",
            "date_published": "2020-09-24T12:38:34.751Z",
            "content_html": "<p>也不知道能写点啥，姑且写写博客配置的过程吧。</p>\n<h2 id=\"博客的安装\"><a class=\"anchor\" href=\"#博客的安装\">#</a> 博客的安装</h2>\n<p>我使用的是 Debian 9 x64。安装 Hexo 需要先安装 Node.js 和 Git 。</p>\n<div class=\"note danger\">\n<p><strong>你需要  <code>root</code>  权限。</strong></p>\n</div>\n<h3 id=\"安装git\"><a class=\"anchor\" href=\"#安装git\">#</a> 安装 Git</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> git-core</pre></td></tr></table></figure><h3 id=\"安装nodejs\"><a class=\"anchor\" href=\"#安装nodejs\">#</a> 安装 Node.js</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">curl</span> -sL https://deb.nodesource.com/setup_current.x <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> -</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y nodejs</pre></td></tr></table></figure><h3 id=\"安装hexo\"><a class=\"anchor\" href=\"#安装hexo\">#</a> 安装 Hexo</h3>\n<p>在安装完 <em>Git</em> 和 <em>Node.js</em> 之后，我们便可以使用 npm 来安装 <em>Hexo</em> 。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g hexo-cli</pre></td></tr></table></figure><h2 id=\"初始化博客\"><a class=\"anchor\" href=\"#初始化博客\">#</a> 初始化博客</h2>\n<p>在安装完后，你需要手动新建博客。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre>hexo init <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span>  <span class=\"token comment\">#你想要的文件夹的名称</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#该命令会使 Hexo 初始化一个新博客于你指定名称和路径的文件夹。</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#例如你在～/ 下执行 hexo init blog，就会建立一个为～/blog 的文件夹用于存放博客数据。</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>folder<span class=\"token operator\">></span> ·       <span class=\"token comment\">#切换到博客根目录</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>程序运行完毕后，指定文件夹的目录应该会被初始化如</p>\n<pre><code>.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n</code></pre>\n<h3 id=\"_configyml\"><a class=\"anchor\" href=\"#_configyml\">#</a> _config.yml</h3>\n<p>该文件存放博客的配置信息。有些插件也需要在此处进行设置。</p>\n<h3 id=\"packagejson\"><a class=\"anchor\" href=\"#packagejson\">#</a> package.json</h3>\n<p>应用程序的信息。EJS，Stylus 和 Markdown renderer 默认会被安装，你可以自由移除。</p>\n<pre><code>package.json\n&#123;\n  &quot;name&quot;: &quot;hexo-site&quot;,\n  &quot;version&quot;: &quot;0.0.0&quot;,\n  &quot;private&quot;: true,\n  &quot;hexo&quot;: &#123;\n    &quot;version&quot;: &quot;&quot;\n  &#125;,\n  &quot;dependencies&quot;: &#123;\n    &quot;hexo&quot;: &quot;^3.8.0&quot;,\n    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,\n    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,\n    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,\n    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,\n    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,\n    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,\n    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,\n    &quot;hexo-server&quot;: &quot;^0.3.3&quot;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"scaffolds\"><a class=\"anchor\" href=\"#scaffolds\">#</a> scaffolds</h3>\n<p>模板文件夹。新建文章时，Hexo 会根据其内容物来建立文件。<br />\nHexo 的模板指的是在新建的文章（.md）中默认填充的内容。</p>\n<h3 id=\"source\"><a class=\"anchor\" href=\"#source\">#</a> source</h3>\n<p>资源文件夹。存放用户资源。除了 <code>_posts</code>  文件夹之外，开头命名为 <code>_</code> 的文件 / 文件夹和隐藏的文件将被忽略。Markdown 和 HTML 文件会被解析并放到  <code>public</code>  文件夹，其余文件会被直接拷贝。</p>\n<h3 id=\"themes\"><a class=\"anchor\" href=\"#themes\">#</a> themes</h3>\n<p>主题文件夹。Hexo 会根据主题来生成静态页面。</p>\n<h2 id=\"使用-git-同步博客源文件\"><a class=\"anchor\" href=\"#使用-git-同步博客源文件\">#</a> 使用 Git 同步博客源文件</h2>\n<p>在实际的使用中，你可能像我一样因为诸如 ssh 操作不便，希望能在远端修改配置等原因，想把文件上传到 Github 的私有仓库或自家 NAS 的 git 仓库里慢慢改。</p>\n<h3 id=\"git-使用\"><a class=\"anchor\" href=\"#git-使用\">#</a> Git 使用</h3>\n<p>首先，确定你在博客的根目录下。执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> init</pre></td></tr></table></figure><p>如此，你初始化了一个空的 Git 仓库。</p>\n<p>使用 <code>ls -a</code>  命令可以查看当前目录下的所有文件 / 文件夹。你可以看到在你的博客根目录下生成了 <code>.git</code>  文件夹。</p>\n<p>接下来，你可以使用</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> ./</pre></td></tr></table></figure><p>来添加该目录下的所有文件 / 文件夹到你的 git 仓库暂存区中。</p>\n<div class=\"note warning\">\n<p>值得注意的是，如果该目录下的文件夹中包含 <code>.git</code>  文件夹，即该文件夹有另外一个 git 仓库，<strong>该文件夹内的文件不会被添加到仓库中。</strong></p>\n</div>\n<div class=\"note warning\">\n<p>另外，每次你修改文件后想要推送，都需要先执行一次 <code>git add ./</code> ，来将修改后的文件添加到暂存区。</p>\n</div>\n<p>在将文件推送至远端 git 仓库前，你需要先将暂存区提交到本地仓库。执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"你的提交信息\"</span></pre></td></tr></table></figure><p>以将暂存区提交到本地仓库。</p>\n<p>成功提交后，你可以执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token operator\">&lt;</span>你的远端git地址<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>分支名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token comment\">#例如 git push git@github.com:Win7GM/Hexo-resources.git master</span></pre></td></tr></table></figure><p>以将本地仓库内容推送到远端 git 仓库。</p>\n<h2 id=\"配置博客\"><a class=\"anchor\" href=\"#配置博客\">#</a> 配置博客</h2>\n<h3 id=\"_configyml-2\"><a class=\"anchor\" href=\"#_configyml-2\">#</a> _config.yml</h3>\n<p>_config.yml 是博客的基础配置。</p>\n",
            "tags": [
                "杂项",
                "博客",
                "manual",
                "unfinished"
            ]
        },
        {
            "id": "https://blog.msforever.xyz/hello-world/",
            "url": "https://blog.msforever.xyz/hello-world/",
            "title": "Hello World",
            "date_published": "2020-09-23T13:56:49.607Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<pre><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<pre><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<pre><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<pre><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "杂项",
                "ignore_this"
            ]
        },
        {
            "id": "https://blog.msforever.xyz/about/",
            "url": "https://blog.msforever.xyz/about/",
            "title": "小透明的小小一步",
            "date_published": "2020-09-22T04:07:25.000Z",
            "content_html": "<p>在下 Win7GM，是个小透明。<br />\n希望自己能在这个博客里留下点有用的东西 XD</p>\n<p>歌单是 196⑨的 w</p>\n",
            "tags": [
                "杂项",
                "关于",
                "ignore_this"
            ]
        }
    ]
}